---
source: crates/mun_syntax/src/tests/parser.rs
expression: "fn foo() {\n    while true {};\n    while { true } {};\n}"
---
SOURCE_FILE@[0; 54)
  FUNCTION_DEF@[0; 54)
    FN_KW@[0; 2) "fn"
    WHITESPACE@[2; 3) " "
    NAME@[3; 6)
      IDENT@[3; 6) "foo"
    PARAM_LIST@[6; 8)
      L_PAREN@[6; 7) "("
      R_PAREN@[7; 8) ")"
    WHITESPACE@[8; 9) " "
    BLOCK_EXPR@[9; 54)
      L_CURLY@[9; 10) "{"
      WHITESPACE@[10; 15) "\n    "
      EXPR_STMT@[15; 29)
        WHILE_EXPR@[15; 28)
          WHILE_KW@[15; 20) "while"
          WHITESPACE@[20; 21) " "
          CONDITION@[21; 25)
            LITERAL@[21; 25)
              TRUE_KW@[21; 25) "true"
          WHITESPACE@[25; 26) " "
          BLOCK_EXPR@[26; 28)
            L_CURLY@[26; 27) "{"
            R_CURLY@[27; 28) "}"
        SEMI@[28; 29) ";"
      WHITESPACE@[29; 34) "\n    "
      EXPR_STMT@[34; 52)
        WHILE_EXPR@[34; 51)
          WHILE_KW@[34; 39) "while"
          WHITESPACE@[39; 40) " "
          CONDITION@[40; 48)
            BLOCK_EXPR@[40; 48)
              L_CURLY@[40; 41) "{"
              WHITESPACE@[41; 42) " "
              LITERAL@[42; 46)
                TRUE_KW@[42; 46) "true"
              WHITESPACE@[46; 47) " "
              R_CURLY@[47; 48) "}"
          WHITESPACE@[48; 49) " "
          BLOCK_EXPR@[49; 51)
            L_CURLY@[49; 50) "{"
            R_CURLY@[50; 51) "}"
        SEMI@[51; 52) ";"
      WHITESPACE@[52; 53) "\n"
      R_CURLY@[53; 54) "}"

