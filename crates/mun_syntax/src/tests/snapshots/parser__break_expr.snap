---
source: crates/mun_syntax/src/tests/parser.rs
expression: "fn foo() {\n    break;\n    if break { 3; }\n    if break 4 { 3; }\n}"
---
SOURCE_FILE@[0; 65)
  FUNCTION_DEF@[0; 65)
    FN_KW@[0; 2) "fn"
    WHITESPACE@[2; 3) " "
    NAME@[3; 6)
      IDENT@[3; 6) "foo"
    PARAM_LIST@[6; 8)
      L_PAREN@[6; 7) "("
      R_PAREN@[7; 8) ")"
    WHITESPACE@[8; 9) " "
    BLOCK_EXPR@[9; 65)
      L_CURLY@[9; 10) "{"
      WHITESPACE@[10; 15) "\n    "
      EXPR_STMT@[15; 21)
        BREAK_EXPR@[15; 20)
          BREAK_KW@[15; 20) "break"
        SEMI@[20; 21) ";"
      WHITESPACE@[21; 26) "\n    "
      EXPR_STMT@[26; 41)
        IF_EXPR@[26; 41)
          IF_KW@[26; 28) "if"
          WHITESPACE@[28; 29) " "
          CONDITION@[29; 34)
            BREAK_EXPR@[29; 34)
              BREAK_KW@[29; 34) "break"
          WHITESPACE@[34; 35) " "
          BLOCK_EXPR@[35; 41)
            L_CURLY@[35; 36) "{"
            WHITESPACE@[36; 37) " "
            EXPR_STMT@[37; 39)
              LITERAL@[37; 38)
                INT_NUMBER@[37; 38) "3"
              SEMI@[38; 39) ";"
            WHITESPACE@[39; 40) " "
            R_CURLY@[40; 41) "}"
      WHITESPACE@[41; 46) "\n    "
      IF_EXPR@[46; 63)
        IF_KW@[46; 48) "if"
        WHITESPACE@[48; 49) " "
        CONDITION@[49; 56)
          BREAK_EXPR@[49; 56)
            BREAK_KW@[49; 54) "break"
            WHITESPACE@[54; 55) " "
            LITERAL@[55; 56)
              INT_NUMBER@[55; 56) "4"
        WHITESPACE@[56; 57) " "
        BLOCK_EXPR@[57; 63)
          L_CURLY@[57; 58) "{"
          WHITESPACE@[58; 59) " "
          EXPR_STMT@[59; 61)
            LITERAL@[59; 60)
              INT_NUMBER@[59; 60) "3"
            SEMI@[60; 61) ";"
          WHITESPACE@[61; 62) " "
          R_CURLY@[62; 63) "}"
      WHITESPACE@[63; 64) "\n"
      R_CURLY@[64; 65) "}"

