---
source: crates/mun_codegen/src/test.rs
expression: "\n    pub fn add(a: f32, b: f32) -> f32 { a + b }\n    pub fn subtract(a: f32, b: f32) -> f32 { a - b }\n    pub fn multiply(a: f32, b: f32) -> f32 { a * b }\n    pub fn divide(a: f32, b: f32) -> f32 { a / b }\n    pub fn remainder(a: f32, b: f32) -> f32 { a % b }\n                        "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [1 x i64*]

define float @add(float %0, float %1) {
body:
  %add = fadd float %0, %1
  ret float %add
}

define float @subtract(float %0, float %1) {
body:
  %sub = fsub float %0, %1
  ret float %sub
}

define float @multiply(float %0, float %1) {
body:
  %mul = fmul float %0, %1
  ret float %mul
}

define float @divide(float %0, float %1) {
body:
  %div = fdiv float %0, %1
  ret float %div
}

define float @remainder(float %0, float %1) {
body:
  %rem = frem float %0, %1
  ret float %rem
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [1 x i64*] zeroinitializer

