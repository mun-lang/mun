---
source: crates/mun_codegen/src/test.rs
assertion_line: 1045
expression: "\n    pub fn not(a: i64) -> i64 { !a }\n    pub fn bitand(a: i64, b: i64) -> i64 { a & b }\n    pub fn bitor(a: i64, b: i64) -> i64 { a | b }\n    pub fn bitxor(a: i64, b: i64) -> i64 { a ^ b }\n                        "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [11 x i64*]

define i64 @not(i64 %0) {
body:
  %not = xor i64 %0, -1
  ret i64 %not
}

define i64 @bitand(i64 %0, i64 %1) {
body:
  %bit_and = and i64 %0, %1
  ret i64 %bit_and
}

define i64 @bitor(i64 %0, i64 %1) {
body:
  %bit_or = or i64 %0, %1
  ret i64 %bit_or
}

define i64 @bitxor(i64 %0, i64 %1) {
body:
  %bit_xor = xor i64 %0, %1
  ret i64 %bit_xor
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [11 x i64*] zeroinitializer

