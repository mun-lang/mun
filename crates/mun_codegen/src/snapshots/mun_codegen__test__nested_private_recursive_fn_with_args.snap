---
source: crates/mun_codegen/src/test.rs
expression: "\n    extern fn other() -> i32;\n\n    fn private_fn(a: i32) -> f32 {\n        private_fn(a)\n    }\n\n    pub fn main() -> f32 {\n        private_fn(other())\n    }\n    "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

%DispatchTable = type { i32 ()* }

@dispatchTable = external global %DispatchTable
@global_type_lookup_table = external global [2 x i64*]

define float @private_fn(i32 %0) {
body:
  %private_fn = call float @private_fn(i32 %0)
  ret float %private_fn
}

define float @main() {
body:
  %other_ptr = load i32 ()*, i32 ()** getelementptr inbounds (%DispatchTable, %DispatchTable* @dispatchTable, i32 0, i32 0), align 8
  %other = call i32 %other_ptr()
  %private_fn = call float @private_fn(i32 %other)
  ret float %private_fn
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%DispatchTable = type { i32 ()* }

@dispatchTable = global %DispatchTable zeroinitializer
@global_type_lookup_table = global [2 x i64*] zeroinitializer

