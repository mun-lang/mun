---
source: crates/mun_codegen/src/test.rs
expression: "\n    pub fn add(a: i32, b: i32) -> i32 { a + b }\n    pub fn subtract(a: i32, b: i32) -> i32 { a - b }\n    pub fn multiply(a: i32, b: i32) -> i32 { a * b }\n    pub fn divide(a: i32, b: i32) -> i32 { a / b }\n    pub fn remainder(a: i32, b: i32) -> i32 { a % b }\n                        "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [1 x i64*]

define i32 @add(i32 %0, i32 %1) {
body:
  %add = add i32 %0, %1
  ret i32 %add
}

define i32 @subtract(i32 %0, i32 %1) {
body:
  %sub = sub i32 %0, %1
  ret i32 %sub
}

define i32 @multiply(i32 %0, i32 %1) {
body:
  %mul = mul i32 %0, %1
  ret i32 %mul
}

define i32 @divide(i32 %0, i32 %1) {
body:
  %div = sdiv i32 %0, %1
  ret i32 %div
}

define i32 @remainder(i32 %0, i32 %1) {
body:
  %rem = srem i32 %0, %1
  ret i32 %rem
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [1 x i64*] zeroinitializer

