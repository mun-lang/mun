---
source: crates/mun_codegen/src/test.rs
expression: "\n    pub fn equals(a: bool, b: bool) -> bool { a == b }\n    pub fn not_equal(a: bool, b: bool) -> bool { a != b}\n    pub fn less(a: bool, b: bool) -> bool { a < b }\n    pub fn less_equal(a: bool, b: bool) -> bool { a <= b }\n    pub fn greater(a: bool, b: bool) -> bool { a > b }\n    pub fn greater_equal(a: bool, b: bool) -> bool { a >= b }\n                        "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [1 x i64*]

define i1 @equals(i1 %0, i1 %1) {
body:
  %eq = icmp eq i1 %0, %1
  ret i1 %eq
}

define i1 @not_equal(i1 %0, i1 %1) {
body:
  %neq = icmp ne i1 %0, %1
  ret i1 %neq
}

define i1 @less(i1 %0, i1 %1) {
body:
  %less = icmp ult i1 %0, %1
  ret i1 %less
}

define i1 @less_equal(i1 %0, i1 %1) {
body:
  %lesseq = icmp ule i1 %0, %1
  ret i1 %lesseq
}

define i1 @greater(i1 %0, i1 %1) {
body:
  %greater = icmp ugt i1 %0, %1
  ret i1 %greater
}

define i1 @greater_equal(i1 %0, i1 %1) {
body:
  %greatereq = icmp uge i1 %0, %1
  ret i1 %greatereq
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [1 x i64*] zeroinitializer

