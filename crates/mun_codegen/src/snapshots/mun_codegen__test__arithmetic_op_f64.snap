---
source: crates/mun_codegen/src/test.rs
assertion_line: 1045
expression: "\n    pub fn add(a: f64, b: f64) -> f64 { a + b }\n    pub fn subtract(a: f64, b: f64) -> f64 { a - b }\n    pub fn multiply(a: f64, b: f64) -> f64 { a * b }\n    pub fn divide(a: f64, b: f64) -> f64 { a / b }\n    pub fn remainder(a: f64, b: f64) -> f64 { a % b }\n                        "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [15 x i64*]

define double @add(double %0, double %1) {
body:
  %add = fadd double %0, %1
  ret double %add
}

define double @subtract(double %0, double %1) {
body:
  %sub = fsub double %0, %1
  ret double %sub
}

define double @multiply(double %0, double %1) {
body:
  %mul = fmul double %0, %1
  ret double %mul
}

define double @divide(double %0, double %1) {
body:
  %div = fdiv double %0, %1
  ret double %div
}

define double @remainder(double %0, double %1) {
body:
  %rem = frem double %0, %1
  ret double %rem
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [15 x i64*] zeroinitializer

