---
source: crates/mun_codegen/src/test.rs
assertion_line: 1045
expression: "\n    pub fn main(){\n        let a = 123;\n        let a = 123u8;\n        let a = 123u16;\n        let a = 123u32;\n        let a = 123u64;\n        let a = 123u128;\n        let a = 1_000_000_u32;\n        let a = 123i8;\n        let a = 123i16;\n        let a = 123i32;\n        let a = 123i64;\n        let a = 123123123123123123123123123123123i128;\n        let a = 1_000_000_i32;\n        let a = 1_000_123.0e-2;\n        let a = 1_000_123.0e-2f32;\n        let a = 1_000_123.0e-2f64;\n    }\n\n    pub fn add(a:u32) -> u32 {\n        a + 12u32\n    }"
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [2 x i64*]

define void @main() {
body:
  %a15 = alloca double, align 8
  %a14 = alloca float, align 4
  %a13 = alloca double, align 8
  %a12 = alloca i32, align 4
  %a11 = alloca i128, align 8
  %a10 = alloca i64, align 8
  %a9 = alloca i32, align 4
  %a8 = alloca i16, align 2
  %a7 = alloca i8, align 1
  %a6 = alloca i32, align 4
  %a5 = alloca i128, align 8
  %a4 = alloca i64, align 8
  %a3 = alloca i32, align 4
  %a2 = alloca i16, align 2
  %a1 = alloca i8, align 1
  %a = alloca i32, align 4
  store i32 123, i32* %a, align 4
  store i8 123, i8* %a1, align 1
  store i16 123, i16* %a2, align 2
  store i32 123, i32* %a3, align 4
  store i64 123, i64* %a4, align 4
  store i128 123, i128* %a5, align 4
  store i32 1000000, i32* %a6, align 4
  store i8 123, i8* %a7, align 1
  store i16 123, i16* %a8, align 2
  store i32 123, i32* %a9, align 4
  store i64 123, i64* %a10, align 4
  store i128 123123123123123123123123123123123, i128* %a11, align 4
  store i32 1000000, i32* %a12, align 4
  store double 0x40C3889D70A3D70A, double* %a13, align 8
  store float 0x40C3889D80000000, float* %a14, align 4
  store double 0x40C3889D70A3D70A, double* %a15, align 8
  ret void
}

define i32 @add(i32 %0) {
body:
  %a = alloca i32, align 4
  store i32 %0, i32* %a, align 4
  %a1 = load i32, i32* %a, align 4
  %add = add i32 %a1, 12
  ret i32 %add
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [2 x i64*] zeroinitializer

