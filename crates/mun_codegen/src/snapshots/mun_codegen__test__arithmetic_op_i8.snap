---
source: crates/mun_codegen/src/test.rs
expression: "\n    pub fn add(a: i8, b: i8) -> i8 { a + b }\n    pub fn subtract(a: i8, b: i8) -> i8 { a - b }\n    pub fn multiply(a: i8, b: i8) -> i8 { a * b }\n    pub fn divide(a: i8, b: i8) -> i8 { a / b }\n    pub fn remainder(a: i8, b: i8) -> i8 { a % b }\n                        "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [1 x i64*]

define i8 @add(i8 %0, i8 %1) {
body:
  %add = add i8 %0, %1
  ret i8 %add
}

define i8 @subtract(i8 %0, i8 %1) {
body:
  %sub = sub i8 %0, %1
  ret i8 %sub
}

define i8 @multiply(i8 %0, i8 %1) {
body:
  %mul = mul i8 %0, %1
  ret i8 %mul
}

define i8 @divide(i8 %0, i8 %1) {
body:
  %div = sdiv i8 %0, %1
  ret i8 %div
}

define i8 @remainder(i8 %0, i8 %1) {
body:
  %rem = srem i8 %0, %1
  ret i8 %rem
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [1 x i64*] zeroinitializer

