---
source: crates/mun_codegen/src/test.rs
assertion_line: 1045
expression: "\n    pub fn fibonacci(n:i32) -> i32 {\n        if n <= 1 {\n            n\n        } else {\n            fibonacci(n-1) + fibonacci(n-2)\n        }\n    }\n    "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [6 x i64*]

define i32 @fibonacci(i32 %0) {
body:
  %lesseq = icmp sle i32 %0, 1
  br i1 %lesseq, label %then, label %else

then:                                             ; preds = %body
  br label %if_merge

else:                                             ; preds = %body
  %sub = sub i32 %0, 1
  %fibonacci = call i32 @fibonacci(i32 %sub)
  %sub5 = sub i32 %0, 2
  %fibonacci6 = call i32 @fibonacci(i32 %sub5)
  %add = add i32 %fibonacci, %fibonacci6
  br label %if_merge

if_merge:                                         ; preds = %else, %then
  %iftmp = phi i32 [ %0, %then ], [ %add, %else ]
  ret i32 %iftmp
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [6 x i64*] zeroinitializer

