---
source: crates/mun_codegen/src/test.rs
expression: "\n    pub fn assign_bitand(a: i128, b: i128) -> i128 {\n        a &= b;\n        a\n    }\n    pub fn assign_bitor(a: i128, b: i128) -> i128 {\n        a |= b;\n        a\n    }\n    pub fn assign_bitxor(a: i128, b: i128) -> i128 {\n        a ^= b;\n        a\n    }\n                        "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [1 x i64*]

define i128 @assign_bitand(i128 %0, i128 %1) {
body:
  %bit_and = and i128 %0, %1
  ret i128 %bit_and
}

define i128 @assign_bitor(i128 %0, i128 %1) {
body:
  %bit_or = or i128 %0, %1
  ret i128 %bit_or
}

define i128 @assign_bitxor(i128 %0, i128 %1) {
body:
  %bit_xor = xor i128 %0, %1
  ret i128 %bit_xor
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [1 x i64*] zeroinitializer

