---
source: crates/mun_codegen/src/test.rs
expression: "\n    pub fn add(a: i16, b: i16) -> i16 { a + b }\n    pub fn subtract(a: i16, b: i16) -> i16 { a - b }\n    pub fn multiply(a: i16, b: i16) -> i16 { a * b }\n    pub fn divide(a: i16, b: i16) -> i16 { a / b }\n    pub fn remainder(a: i16, b: i16) -> i16 { a % b }\n                        "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

@global_type_lookup_table = external global [1 x i64*]

define i16 @add(i16 %0, i16 %1) {
body:
  %add = add i16 %0, %1
  ret i16 %add
}

define i16 @subtract(i16 %0, i16 %1) {
body:
  %sub = sub i16 %0, %1
  ret i16 %sub
}

define i16 @multiply(i16 %0, i16 %1) {
body:
  %mul = mul i16 %0, %1
  ret i16 %mul
}

define i16 @divide(i16 %0, i16 %1) {
body:
  %div = sdiv i16 %0, %1
  ret i16 %div
}

define i16 @remainder(i16 %0, i16 %1) {
body:
  %rem = srem i16 %0, %1
  ret i16 %rem
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

@global_type_lookup_table = global [1 x i64*] zeroinitializer

