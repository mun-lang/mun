---
source: crates/mun_codegen/src/test.rs
assertion_line: 1045
expression: "\n    pub struct(gc) GcStruct(f32, f32);\n    pub struct(value) ValueStruct(f32, f32);\n\n    pub struct(gc) GcWrapper(GcStruct, ValueStruct)\n    pub struct(value) ValueWrapper(GcStruct, ValueStruct);\n\n    pub fn new_gc_struct(a: f32, b: f32) -> GcStruct {\n        GcStruct(a, b)\n    }\n\n    pub fn new_value_struct(a: f32, b: f32) -> ValueStruct {\n        ValueStruct(a, b)\n    }\n\n    pub fn new_gc_wrapper(a: GcStruct, b: ValueStruct) -> GcWrapper {\n        GcWrapper(a, b)\n    }\n\n    pub fn new_value_wrapper(a: GcStruct, b: ValueStruct) -> ValueWrapper {\n        ValueWrapper(a, b)\n    }\n    "
---
; == FILE IR (mod) =====================================
; ModuleID = 'mod'
source_filename = "mod"

%DispatchTable = type { i8** (i8*, i8*)* }
%GcStruct = type { float, float }
%ValueStruct = type { float, float }
%GcWrapper = type { %GcStruct**, %ValueStruct }
%ValueWrapper = type { %GcStruct**, %ValueStruct }

@allocatorHandle = external global i8*
@dispatchTable = external global %DispatchTable
@global_type_lookup_table = external global [59 x i64*]

define %GcStruct** @new_gc_struct(float %0, float %1) {
body:
  %init = insertvalue %GcStruct undef, float %0, 0
  %init3 = insertvalue %GcStruct %init, float %1, 1
  %new_ptr = load i8** (i8*, i8*)*, i8** (i8*, i8*)** getelementptr inbounds (%DispatchTable, %DispatchTable* @dispatchTable, i32 0, i32 0), align 8
  %GcStruct_ptr = load i64*, i64** getelementptr inbounds ([59 x i64*], [59 x i64*]* @global_type_lookup_table, i64 0, i64 53), align 8
  %type_info_ptr_to_i8_ptr = bitcast i64* %GcStruct_ptr to i8*
  %allocator_handle = load i8*, i8** @allocatorHandle, align 8
  %new = call i8** %new_ptr(i8* %type_info_ptr_to_i8_ptr, i8* %allocator_handle)
  %GcStruct_ptr_ptr = bitcast i8** %new to %GcStruct**
  %GcStruct_mem_ptr = load %GcStruct*, %GcStruct** %GcStruct_ptr_ptr, align 8
  store %GcStruct %init3, %GcStruct* %GcStruct_mem_ptr, align 4
  ret %GcStruct** %GcStruct_ptr_ptr
}

define %ValueStruct @new_value_struct(float %0, float %1) {
body:
  %init = insertvalue %ValueStruct undef, float %0, 0
  %init3 = insertvalue %ValueStruct %init, float %1, 1
  ret %ValueStruct %init3
}

define %ValueStruct** @new_value_struct_wrapper(float %0, float %1) {
body:
  %new_value_struct = call %ValueStruct @new_value_struct(float %0, float %1)
  %new_ptr = load i8** (i8*, i8*)*, i8** (i8*, i8*)** getelementptr inbounds (%DispatchTable, %DispatchTable* @dispatchTable, i32 0, i32 0), align 8
  %ValueStruct_ptr = load i64*, i64** getelementptr inbounds ([59 x i64*], [59 x i64*]* @global_type_lookup_table, i64 0, i64 56), align 8
  %type_info_ptr_to_i8_ptr = bitcast i64* %ValueStruct_ptr to i8*
  %allocator_handle = load i8*, i8** @allocatorHandle, align 8
  %new = call i8** %new_ptr(i8* %type_info_ptr_to_i8_ptr, i8* %allocator_handle)
  %ValueStruct_ptr_ptr = bitcast i8** %new to %ValueStruct**
  %ValueStruct_mem_ptr = load %ValueStruct*, %ValueStruct** %ValueStruct_ptr_ptr, align 8
  store %ValueStruct %new_value_struct, %ValueStruct* %ValueStruct_mem_ptr, align 4
  ret %ValueStruct** %ValueStruct_ptr_ptr
}

define %GcWrapper** @new_gc_wrapper(%GcStruct** %0, %ValueStruct %1) {
body:
  %.fca.0.extract = extractvalue %ValueStruct %1, 0
  %.fca.1.extract = extractvalue %ValueStruct %1, 1
  %init = insertvalue %GcWrapper undef, %GcStruct** %0, 0
  %init3 = insertvalue %GcWrapper %init, %ValueStruct %1, 1
  %new_ptr = load i8** (i8*, i8*)*, i8** (i8*, i8*)** getelementptr inbounds (%DispatchTable, %DispatchTable* @dispatchTable, i32 0, i32 0), align 8
  %GcWrapper_ptr = load i64*, i64** getelementptr inbounds ([59 x i64*], [59 x i64*]* @global_type_lookup_table, i64 0, i64 39), align 8
  %type_info_ptr_to_i8_ptr = bitcast i64* %GcWrapper_ptr to i8*
  %allocator_handle = load i8*, i8** @allocatorHandle, align 8
  %new = call i8** %new_ptr(i8* %type_info_ptr_to_i8_ptr, i8* %allocator_handle)
  %GcWrapper_ptr_ptr = bitcast i8** %new to %GcWrapper**
  %GcWrapper_mem_ptr = load %GcWrapper*, %GcWrapper** %GcWrapper_ptr_ptr, align 8
  store %GcWrapper %init3, %GcWrapper* %GcWrapper_mem_ptr, align 8
  ret %GcWrapper** %GcWrapper_ptr_ptr
}

define %GcWrapper** @new_gc_wrapper_wrapper(%GcStruct** %0, %ValueStruct** %1) {
body:
  %mem_ptr = load %ValueStruct*, %ValueStruct** %1, align 8
  %deref = load %ValueStruct, %ValueStruct* %mem_ptr, align 4
  %new_gc_wrapper = call %GcWrapper** @new_gc_wrapper(%GcStruct** %0, %ValueStruct %deref)
  ret %GcWrapper** %new_gc_wrapper
}

define %ValueWrapper @new_value_wrapper(%GcStruct** %0, %ValueStruct %1) {
body:
  %.fca.0.extract = extractvalue %ValueStruct %1, 0
  %.fca.1.extract = extractvalue %ValueStruct %1, 1
  %init = insertvalue %ValueWrapper undef, %GcStruct** %0, 0
  %init3 = insertvalue %ValueWrapper %init, %ValueStruct %1, 1
  ret %ValueWrapper %init3
}

define %ValueWrapper** @new_value_wrapper_wrapper(%GcStruct** %0, %ValueStruct** %1) {
body:
  %mem_ptr = load %ValueStruct*, %ValueStruct** %1, align 8
  %deref = load %ValueStruct, %ValueStruct* %mem_ptr, align 4
  %new_value_wrapper = call %ValueWrapper @new_value_wrapper(%GcStruct** %0, %ValueStruct %deref)
  %new_ptr = load i8** (i8*, i8*)*, i8** (i8*, i8*)** getelementptr inbounds (%DispatchTable, %DispatchTable* @dispatchTable, i32 0, i32 0), align 8
  %ValueWrapper_ptr = load i64*, i64** getelementptr inbounds ([59 x i64*], [59 x i64*]* @global_type_lookup_table, i64 0, i64 52), align 8
  %type_info_ptr_to_i8_ptr = bitcast i64* %ValueWrapper_ptr to i8*
  %allocator_handle = load i8*, i8** @allocatorHandle, align 8
  %new = call i8** %new_ptr(i8* %type_info_ptr_to_i8_ptr, i8* %allocator_handle)
  %ValueWrapper_ptr_ptr = bitcast i8** %new to %ValueWrapper**
  %ValueWrapper_mem_ptr = load %ValueWrapper*, %ValueWrapper** %ValueWrapper_ptr_ptr, align 8
  store %ValueWrapper %new_value_wrapper, %ValueWrapper* %ValueWrapper_mem_ptr, align 8
  ret %ValueWrapper** %ValueWrapper_ptr_ptr
}

; == GROUP IR (mod) ====================================
; ModuleID = 'group_name'
source_filename = "group_name"

%DispatchTable = type { i8** (i8*, i8*)* }

@dispatchTable = global %DispatchTable zeroinitializer
@global_type_lookup_table = global [59 x i64*] zeroinitializer
@allocatorHandle = unnamed_addr global i8* null

